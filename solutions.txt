import unittest
from unittest.mock import MagicMock
from employee import Employee

class TestEmployee(unittest.TestCase):

    def setUp(self):
        self.mock_db= MagicMock()

        self.emp= Employee(emp_id=101,name='Alice',salary=50000,db_client=self.mock_db)
    
    def test_give_raise(self):
        new_salary= self.emp.salary_rise(5000)
        self.assertEqual(new_salary,55000)

    def test_save_to_db_success_default_salary(self):

        self.mock_db.save_employee.return_value=True

        result= self.emp.save_to_db()
        self.assertTrue(result)

        self.mock_db.save_employee.assert_called_once_with(101,'Alice',50000)
    
    def test_save_to_db_success_after_raise(self):
        self.emp.salary_rise(5000)

        self.mock_db.save_employee.return_value=True

        result= self.emp.save_to_db()
        self.assertTrue(result)

        self.mock_db.save_employee.assert_called_once_with(101,'Alice',55000)
    

    def test_Save_to_db_failure(self):

        self.mock_db.save_employee.return_value= False

        result= self.emp.save_to_db()
        self.assertFalse(result)

    def test_save_no_client(self):
        emp_without_db=Employee(emp_id=102,name='Bob',salary=4567,db_client=None)
        with self.assertRaises(ValueError):
            emp_without_db.save_to_db()

