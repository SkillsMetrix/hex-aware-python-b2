"""
- create/reads a sqlite transactions table (dummy data)
- export table as CSV
- Read Local Customer CSV
- Inner joins in Acc No


"""

from pathlib import Path
import sqlite3
import pandas as pd
import logging
from logging.handlers import RotatingFileHandler
import sys
from typing import Dict,Tuple

# ------configuration-------

BASE_DIR= Path("temp")
DB_FILE= BASE_DIR / "banking.db"
DB_EXPORT_CSV= BASE_DIR / "db_export.csv"
CUSTOMER_CSV= BASE_DIR / "custome_details.csv"
FINAL_REPORT= BASE_DIR / "final_report.csv"
LOG_FILE= BASE_DIR / "banking.etl.log"

CONVERSION_RATES: Dict[str,float]= {
    "USD" : 1.0,
    "INR": 0.012,
    "EUR": 1.08
}
REQUIRED_DB_COLUMNS= {
   "Account_Number", "Customer_Name", "Branch_Code", "Transaction_Date", "Transaction_Type", "Transaction_Amount", "Balance," "Currency", "Account_Status"
}
REQUIRED_CUSTOMER_COLUMNS={"Account_Number", "Customer_Email","Customer_Phone"}

#------- Loging Setup--------

def setup_logging(log_file: Path) -> None:
    log_file.parent.mkdir(parents= True,exist_ok=True)
    logger=logging.getLogger()
    logger.setLevel(logging.DEBUG)

    fmt= logging.Formatter("%(asctime)s - %(levelname)s - %(name)s - %(message)s")

    # console handler

    ch= logging.StreamHandler(sys.stdout)
    ch.setLevel(logging.INFO)
    ch.setFormatter(fmt)
    logger.addHandler(ch)

    # Rotating File handler (DEBUG)
    fh=RotatingFileHandler(log_file,maxBytes=5 * 1024 * 1024,backupCount=3)
    fh.setLevel(logging.DEBUG)
    fh.setFormatter(fmt)
    logger.addFilter(fh)

logger= logging.getLogger(__name__)
